{"version":3,"sources":["../src/Component.js"],"names":["getDate","date","Date","getTime","ReactLiveClock","props","ticking","interval","tickTimer","setInterval","forceUpdate","clearInterval","children","format","timezone","restProps","dateValue","localizedTime","tz","formattedTime","Component","propTypes","string","oneOfType","number","bool","defaultProps"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;;;;;AAEA,IAAMA,UAAU,SAAVA,OAAU;AAAA,SAAQC,OAAO,IAAIC,IAAJ,CAASD,IAAT,EAAeE,OAAf,EAAP,GAAkC,IAAID,IAAJ,GAAWC,OAAX,EAA1C;AAAA,CAAhB;;IAEqBC,c;;;;;;;;;;;wCACC;AAAA;;AAAA,mBACU,KAAKC,KADf;AAAA,UACXC,OADW,UACXA,OADW;AAAA,UACFC,QADE,UACFA,QADE;;;AAGlB,UAAID,OAAJ,EAAa;AACX,aAAKE,SAAL,GAAiBC,YAAY,YAAM;AACjC,iBAAKC,WAAL;AACD,SAFgB,EAEdH,QAFc,CAAjB;AAGD;AACF;;;2CAEsB;AACrB,UAAI,KAAKC,SAAT,EAAoB;AAClBG,sBAAc,KAAKH,SAAnB;AACD;AACF;;;6BAEQ;AAAA,oBACkD,KAAKH,KADvD;AAAA,UACAO,QADA,WACAA,QADA;AAAA,UACUX,IADV,WACUA,IADV;AAAA,UACgBY,MADhB,WACgBA,MADhB;AAAA,UACwBC,QADxB,WACwBA,QADxB;AAAA,UACqCC,SADrC;;AAEP,UAAMC,YAAYhB,QAAQC,QAAQW,QAAhB,CAAlB;AACA,UAAMK,gBAAgB,8BAAOD,SAAP,CAAtB;;AAEA,UAAIF,QAAJ,EAAc;AACZG,sBAAcC,EAAd,CAAiBJ,QAAjB;AACD;;AAED,UAAMK,gBAAgBF,cAAcJ,MAAd,CAAqBA,MAArB,CAAtB;;AAEA,aACE;AAAA;AAAUE,iBAAV;AAAuBI;AAAvB,OADF;AAGD;;;;EA/ByC,gBAAMC,S;;kBAA7BhB,c;;;AAkCrBA,eAAeiB,SAAf,GAA2B;AACzBT,YAAU,oBAAUU,MADK;AAEzBrB,QAAM,oBAAUsB,SAAV,CAAoB,CACxB,oBAAUC,MADc,EAExB,oBAAUF,MAFc,CAApB,CAFmB;AAMzBT,UAAQ,oBAAUS,MANO;AAOzBf,YAAU,oBAAUiB,MAPK;AAQzBlB,WAAS,oBAAUmB,IARM;AASzBX,YAAU,oBAAUQ;AATK,CAA3B;;AAYAlB,eAAesB,YAAf,GAA8B;AAC5BzB,QAAM,IADsB;AAE5BY,UAAQ,OAFoB;AAG5BN,YAAU,IAHkB;AAI5BD,WAAS,KAJmB;AAK5BQ,YAAU;AALkB,CAA9B","file":"Component.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment-timezone';\r\n\r\nconst getDate = date => date ? new Date(date).getTime() : new Date().getTime();\r\n\r\nexport default class ReactLiveClock extends React.Component {\r\n  componentDidMount() {\n    const {ticking, interval} = this.props;\n\r\n    if (ticking) {\r\n      this.tickTimer = setInterval(() => {\r\n        this.forceUpdate();\r\n      }, interval);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.tickTimer) {\r\n      clearInterval(this.tickTimer);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {children, date, format, timezone, ...restProps} = this.props;\r\n    const dateValue = getDate(date || children);\r\n    const localizedTime = moment(dateValue);\r\n\r\n    if (timezone) {\r\n      localizedTime.tz(timezone);\r\n    }\r\n\r\n    const formattedTime = localizedTime.format(format);\r\n\r\n    return (\r\n      <time {...restProps}>{ formattedTime }</time>\r\n    );\r\n  }\r\n}\r\n\r\nReactLiveClock.propTypes = {\r\n  children: PropTypes.string,\r\n  date: PropTypes.oneOfType([\r\n    PropTypes.number,\r\n    PropTypes.string\r\n  ]),\r\n  format: PropTypes.string,\r\n  interval: PropTypes.number,\r\n  ticking: PropTypes.bool,\r\n  timezone: PropTypes.string\r\n};\r\n\r\nReactLiveClock.defaultProps = {\r\n  date: null,\r\n  format: 'HH:mm',\r\n  interval: 1000,\r\n  ticking: false,\r\n  timezone: null\r\n};\r\n"]}