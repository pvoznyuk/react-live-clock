{"version":3,"sources":["../src/Component.js"],"names":["BASE_UNIT","ReactLiveClock","props","date","children","timesatmp","baseTime","Date","getTime","state","realTime","now","startTime","ticking","interval","tickTimer","setInterval","updateClock","clearInterval","setState","newTime","diff","clone","add","format","timezone","restProps","localizedTime","tz","formattedTime","childProps","Object","keys","filter","includes","key","reduce","acc","Component","propTypes","string","oneOfType","number","bool","defaultProps"],"mappings":"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","file":"Component.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment-timezone';\r\n\nconst BASE_UNIT = 'milliseconds';\r\n\nexport default class ReactLiveClock extends React.Component {\r\n  constructor(props) {\n    super(props);\n\n    const date = props.date || props.children || null;\n    const timesatmp = moment();\n    const baseTime = date ? moment(new Date(date).getTime()) : timesatmp;\n\n    this.state = {\n      realTime: !date,\n      now: baseTime,\n      baseTime,\n      startTime: timesatmp\n    };\n  }\n\n  componentDidMount() {\n    const {ticking, interval} = this.props;\n\r\n    if (ticking && interval) {\r\n      this.tickTimer = setInterval(() => {\n        this.updateClock();\r\n      }, interval);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.tickTimer) {\r\n      clearInterval(this.tickTimer);\r\n    }\r\n  }\r\n\n  updateClock() {\n    const {realTime} = this.state;\n\n    if (realTime) {\n      this.setState({\n        now: moment()\n      });\n    } else {\n      const {baseTime, startTime} = this.state;\n      const newTime = moment();\n      const diff = newTime.diff(startTime, BASE_UNIT);\n\n      this.setState({\n        now: baseTime.clone().add(diff, BASE_UNIT)\n      });\n    }\n  }\n\r\n  render() {\r\n    const {format, timezone, ...restProps} = this.props;\r\n    const {now} = this.state;\r\n    const localizedTime = now;\r\n\r\n    if (timezone) {\r\n      localizedTime.tz(timezone);\r\n    }\r\n\r\n    const formattedTime = localizedTime.format(format);\r\n\n    const childProps = Object.keys(restProps)\n      .filter(key => !['date', 'interval', 'ticking'].includes(key))\n      .reduce((acc, key) => {\n        acc[key] = restProps[key];\n        return acc;\n      }, {});\n\r\n    return (\r\n      <time {...childProps}>{ formattedTime }</time>\r\n    );\r\n  }\r\n}\r\n\r\nReactLiveClock.propTypes = {\r\n  children: PropTypes.string,\r\n  date: PropTypes.oneOfType([\r\n    PropTypes.number,\r\n    PropTypes.string\r\n  ]),\r\n  format: PropTypes.string,\r\n  interval: PropTypes.number,\r\n  ticking: PropTypes.bool,\r\n  timezone: PropTypes.string\r\n};\r\n\r\nReactLiveClock.defaultProps = {\r\n  date: null,\r\n  format: 'HH:mm',\r\n  interval: 1000,\r\n  ticking: false,\r\n  timezone: null\r\n};\r\n"]}